#include <Arduino.h>
#pragma once

/**
 * Calibrate electrodes with a standard pH buffer.
 *
 * Assume a standard buffer solution has already been applied to the specified electrodes. Store the current voltage for the specified electrodes in memory and use it as a comparison to calculate the pH of those electrodes in the future.
 *
 * @param electrodes Bool array of length 96, saying which electrodes to calibrate. Such an array can be generated by parseElectrodeInput().
 * @param pH pH of the buffer currently residing on the electrodes being calibrated.
 */
void calibrate(bool electrodes[], float pH);

/**
 * Measure electrode pH.
 *
 * Read the voltage at all electrodes and convert to a pH value using the calibration data stored in memory. Store the calculated pH values in the return array. Return a flag saying whether or not the voltage has settled.
 *
 * @param phValues Return array to hold the pH measurements. `pHValues` must have 96 elements, as all electrodes will be read.
 *
 * @return True if the pH measurement has settled and is ready to be reported; false otherwise.
 */
bool measurePh(float phValues[]);

/**
 * Measure electrode voltage as received by the ADC.
 *
 * Read the voltage at all electrodes but don't convert to a pH value. Store the raw voltages in the return array. Return a flag saying whether or not the voltage has settled.
 *
 * @param voltages Return array to hold the voltage readings. `voltages` must have 96 elements, as all electrodes will be read.
 */
bool measureVoltage(float voltages[]);

/**
 * Parse electrode identifiers as a string input.
 *
 * Interpret an input string, such as "A1-A8" and populate an array of 96 bools to say which ones are selected. The array to populate is passed in as the second argument. Return true or false based on whether the string parsing succeeded or failed.
 *
 * @param input String representing a range of electrodes, such as "B10-C3". This corresponds to electrodes B10, B11, B12, C1, C2, and C3.
 * @param electrodes Return array to hold boolean values for each electrode to say whether it was included in the range or not.
 *
 * @return True if the input was parsed successfully, false otherwise.
 */
bool parseElectrodeInput(String input, bool electrodes[]);
